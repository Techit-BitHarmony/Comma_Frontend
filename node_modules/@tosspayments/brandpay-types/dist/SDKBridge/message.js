"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentWidgetMessageType = exports.WidgetMessageType = exports.MessageType = void 0;
const cancel_1 = require("./event/cancel");
const commonParams_1 = require("./event/commonParams");
const complete_1 = require("./event/complete");
const customerToken_1 = require("./event/customerToken");
const disposeBridge_1 = require("./event/disposeBridge");
const invokedMethod_1 = require("./event/invokedMethod");
const ktAlphaShopOCRScan_1 = require("./event/kt-alpha-shop/ktAlphaShopOCRScan");
const mount_1 = require("./event/mount");
const getShippingAddressWidgetEnabled_1 = require("./event/payment-widget/getShippingAddressWidgetEnabled");
const syncShippingAddressToBrandpay_1 = require("./event/payment-widget/syncShippingAddressToBrandpay");
const paymentMethods_1 = require("./event/paymentMethods");
const paymentMethodType_1 = require("./event/paymentMethodType");
const paymentParams_1 = require("./event/paymentParams");
const paymentResult_1 = require("./event/paymentResult");
const registerResult_1 = require("./event/registerResult");
const RegisterRoutePath_1 = require("./event/RegisterRoutePath");
const routePath_1 = require("./event/routePath");
const safeArea_1 = require("./event/safeArea");
const sdkConfig_1 = require("./event/sdkConfig");
const serverUrl_1 = require("./event/serverUrl");
const termScope_1 = require("./event/termScope");
const viewport_1 = require("./event/viewport");
const mount_2 = require("./event/widget/mount");
const openAddPaymentMethod_1 = require("./event/widget/openAddPaymentMethod");
const openCashReceiptSetting_1 = require("./event/widget/openCashReceiptSetting");
const openRegister_1 = require("./event/widget/openRegister");
const resizeWidget_1 = require("./event/widget/resizeWidget");
const syncState_1 = require("./event/widget/syncState");
const updateAmount_1 = require("./event/widget/updateAmount");
const updateCashReceipt_1 = require("./event/widget/updateCashReceipt");
const updatePaymentMethod_1 = require("./event/widget/updatePaymentMethod");
const updateWidgetParams_1 = require("./event/widget/updateWidgetParams");
const widgetParams_1 = require("./event/widget/widgetParams");
exports.MessageType = {
    COMMON_PARAMS: commonParams_1.MessageName,
    PAYMENT_PARAMS: paymentParams_1.MessageName,
    METHOD_TYPE: paymentMethodType_1.MessageName,
    SAFE_AREA: safeArea_1.MessageName,
    VIEWPORT: viewport_1.MessageName,
    PAYMENT_RESULT: paymentResult_1.MessageName,
    INVOKED_METHOD: invokedMethod_1.MessageName,
    ROUTE_PATH: routePath_1.MessageName,
    CUSTOMER_TOKEN: customerToken_1.MessageName,
    PAYMENT_METHODS: paymentMethods_1.MessageName,
    COMPLETE: complete_1.MessageName,
    CANCEL: cancel_1.MessageName,
    REGISTER_RESULT: registerResult_1.MessageName,
    TERM_SCOPE: termScope_1.MessageName,
    SERVER_URL: serverUrl_1.MessageName,
    DISPOSE_BRIDGE: disposeBridge_1.MessageName,
    REGISTER_ROUTE_PATH: RegisterRoutePath_1.MessageName,
    SDK_CONFIG: sdkConfig_1.MessageName,
    KT_ALPHA_SHOP_OCR_SCAN: ktAlphaShopOCRScan_1.MessageName,
    MOUNT: mount_1.MessageName,
};
exports.WidgetMessageType = {
    OPEN_CASH_RECEIPT_SETTING: openCashReceiptSetting_1.MessageName,
    OPEN_ADD_PAYMENT_METHOD: openAddPaymentMethod_1.MessageName,
    WIDGET_PARAMS: widgetParams_1.MessageName,
    COMMON_PARAMS: commonParams_1.MessageName,
    VIEWPORT: viewport_1.MessageName,
    SAFE_AREA: safeArea_1.MessageName,
    INVOKED_METHOD: invokedMethod_1.MessageName,
    RESIZE_WIDGET: resizeWidget_1.MessageName,
    UPDATE_PAYMENT_METHOD: updatePaymentMethod_1.MessageName,
    SYNC_STATE: syncState_1.MessageName,
    UPDATE_CASH_RECEIPT: updateCashReceipt_1.MessageName,
    UPDATE_WIDGET_PARAMS: updateWidgetParams_1.MessageName,
    SERVER_URL: serverUrl_1.MessageName,
    UPDATE_AMOUNT: updateAmount_1.MessageName,
    DISPOSE_BRIDGE: disposeBridge_1.MessageName,
    OPEN_REGISTER: openRegister_1.MessageName,
    CUSTOMER_TOKEN: customerToken_1.MessageName,
    SDK_CONFIG: sdkConfig_1.MessageName,
    MOUNT: mount_2.MessageName,
};
exports.PaymentWidgetMessageType = {
    SYNC_SHIPPING_ADDRESS_TO_BRANDPAY: syncShippingAddressToBrandpay_1.MessageName,
    GET_SHIPPING_ADDRESS_WIDGET_ENABLED: getShippingAddressWidgetEnabled_1.MessageName,
};
