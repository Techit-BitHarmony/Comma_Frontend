import { Account, BankCode, BankCodeInNumber } from './account';
import { CardCompanyCode, CardInfo } from './cardInfo';
declare type Icon = 'icn' | 'icon';
declare type Color = `#${string}`;
export declare type MethodId = string;
export interface Method {
    id: MethodId;
    alias?: string | null;
    registeredAt: string;
    status: 'ENABLED' | 'DISABLED';
    isAvailable: boolean;
    /**
     * @deprecated
     */
    icon: string;
    /**
     * @deprecated
     */
    iconUrl: string;
    icons: {
        normal: {
            name: `${Icon}-bank-${string}`;
            url: string;
        };
        fill: {
            name: `${Icon}-bank-fill-${string}`;
            url: string;
        };
        square: {
            name: `${Icon}-bank-square-${string}`;
            url: string;
        };
    };
    color: {
        background: Color;
        text: Color;
    };
}
export interface CardMethod extends Pick<CardInfo, 'cardCompany' | 'cardType' | 'cardName' | 'issueCompany' | 'ownerType'>, Omit<Method, 'id'> {
    id: string;
    cardNumber: string;
    cardName: string;
    cardImgUrl?: string;
    acquirerCode: CardCompanyCode;
    issuerCode: CardCompanyCode;
}
export interface AccountMethod extends Pick<Account, 'icon' | 'iconUrl'>, Omit<Method, 'id'> {
    id: string;
    accountNumber: string;
    accountName: string;
    /**
     * bankCode 로 변경
     * @deprecated
     * @since v1.7
     * @link {@see https://docs.tosspayments.com/reference/release-note#2022-11-16}
     */
    bank: BankCode;
    bankCode: BankCodeInNumber;
}
export declare type PaymentMethod = CardMethod | AccountMethod;
export interface Methods {
    cards: CardMethod[];
    accounts: AccountMethod[];
    selectedMethodId: MethodId | undefined;
}
export {};
